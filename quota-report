#!/bin/bash												
# VM Snapshot Use Report - LB side							
# 4/19/2016													
# Mike Lyon													
# Scale Computing											
# mlyon@scalecomputing.com									
# 4/21/2016 - Added count for VMs and help message			
# 4/26/2016 - Need to get the usage fixed up										
# 5/2/2016 - Updated Formatting															
# 5/9/2016 - Added in check for quota violations													
#															
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

# Help Message
# Help
function usage {
   echo "Usage: $0 [Company name] [Disk quota] [CPU quota] [Mem quota] [VM quota]";
   echo ""
   echo "All arguments are required, no spaces"
   echo " "
   echo "[Company name] = Company name from the tag of the replicated VM"
   echo "[Disk quota] = Disk quota based on service level (in GB)"
   echo "[CPU quota] = vCPU quota based on service level";
   echo "[Mem quota] = RAM quota based on service level";
   echo "[VM quota] = VM quota based on service level";
   echo "";
   echo "Example:"
   echo "usagereport Acme 20 16 16 4"
   echo ""
   echo "Represents the company name of Acme, with a 20G disk limit, 16 processors, 4 VMs, and 16G of memory"
}

for ARG in "$@"
do
   case "$ARG" in
      -h)
         usage
         exit 1
       ;;
       -d*)
    esac
done
# Initialize Global Variables and Arrays

blockDiffArray=()
cpuArray=()
memArray=()

finalTotal=0
cpuTotal=0
memTotal=0
vmTotal=0
cpu=0
mem=0


# Get Company Name
#read -p "Please Enter the Customer Name:  " custName

# Store the blockDiff values in the snapTotal Array
for vmGUID in `sc vm show display detail | grep -B2 $1 | grep GUID | awk '{print $2}'`
   do
      blockDiffs=`sc vm show display snaps guid $vmGUID | egrep 'User|Automated' | cut -c 140-160 | awk '{print $2}'` 
      blockDiffArray+=("$blockDiffs")
      mem=`sc vm show display detail guid $vmGUID | egrep Memory | awk '{print $2'} | cut -d '.' -f 1`
      memArray+=("$mem")
      cpu=`sc vm show display detail guid $vmGUID | egrep CPUs | awk '{print $2'}`
      cpuArray+=("$cpu")
      vmTotal=`sc vm show display detail | grep -c $1`   
   done


# Sum the total from the blockDiffs Array
for total in ${blockDiffArray[@]}
   do
      let finalTotal+=$total
   done

# Sum vCPU total
for vCPUTotal in ${cpuArray[@]}
   do
      let cpuTotal+=$vCPUTotal
   done
   
# Sum Mem total
for vMEMTotal in ${memArray[@]}
   do
      let memTotal+=$vMEMTotal
   done
   
date=`date`   
# Display the total:
echo "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - "
echo "-  Daily Quota Report:																	"
echo "-											          										"	
echo "-  Prepared for: $1																		"
echo "-  As of $date																			"
echo "-											         										"
echo -e '-\t' "Disk Usage:																		"
echo -e '-\t' "   $1 is using:																	"
echo -e '-\t' "      $(( finalTotal / 1024 )) GB				        						"
echo -e '-\t' "   Of the $2 GB Disk Quota.														"
diskQuota=$(( finalTotal / 1024 ))
if (( $diskQuota >= $2 ))
   then
   echo "-																					    "
   echo -e '-\t\t'  "------  WARNING  ------													"
   echo -e '-\t\t'  "--- QUOTA VIOLATION ---													"
   echo -e '-\t\t'  "$1 has exceeded their Disk quota by: $(( finalTotal - diskQuota))          " 
   echo "- 									         											"
fi
echo "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - "
echo " "
echo -e '-\t' "CPU Usage:									   									"
echo -e '-\t' "   $1 has used:																	"
echo -e '-\t' "      $cpuTotal vCPUs							        						"
echo -e '-\t' "   Of the $3 vCPU quota															"
if (( $cpuTotal >= $3 ))
   then
   echo "-																						"
   echo -e '-\t\t' "------  WARNING  ------														"
   echo -e '-\t\t' "--- QUOTA VIOLATION ---														"
   echo -e '-\t\t' "$1 has exceeded their CPU quota by: $(( cpuTotal - $3 ))                    " 
   echo "-																						"
fi
echo "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - "
echo " "
echo -e '-\t' "Memory Usage:																	"
echo -e '-\t' "   $1 has used:																	"
echo -e '-\t' "      $memTotal  GB																"
echo -e '-\t' "   Of the $4 GB Memory Quota.													"
if (( $memTotal > $4 )) 
   then
   echo "-																						"
   echo -e '-\t\t' "------  WARNING  ------														"
   echo -e '-\t\t' "--- QUOTA VIOLATION ---														"
   echo -e '-\t\t' "$1 has exceeded their RAM quota by: " $(( memTotal - $4 ))
   echo "-																						"
fi
echo "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - "
echo " "
echo -e '-\t' "Protected VM Quantity:															"
echo -e '-\t' "      $1 is protecting $vmTotal VMs												"
echo -e '-\t' "   of their $5 VM quota															"
if (( $vmTotal > $5 ))
   then
   echo "-																						"
   echo -e '-\t\t' "------  WARNING  ------														"
   echo -e '-\t\t' "--- QUOTA VIOLATION ---														"
   echo -e '-\t\t' "$1 has exceeded their protected VM quota by: " $(( vmTotal - $5))
   echo "-																						"
fi
echo "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - "
